#!/bin/csh

# THIS FILE IS AUTOMATICALLY GENERATED DURING INSTALLATION
# RERUNNING THE INSTALLATION WILL OVERWRITE CHANGES
# CHANGES SHOULD BE ADDED IN THE RESPECTIVE TEMPLATE 
# IN Repository/config/

###################################################################
########################    DESCRIPTION    ########################
###################################################################

# This script can be used to set environment variables that
# make it more convenient to run and use the FlameMaster package.
# You might want to add something like the following line to your

# ~/.cshrc or your ~/.csh_profile (or whatever you use):
# source '/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Repository/../Bin/bin/Source.bash'

# Alias commands and environment variables are only set if the
# the respective files exist. Otherwise, you will see a warning
# and only a subset of the variables is set.

# This script is configured automatically during the installation, 
# but you can insert your own configuration in the section below if
# you want to. Beware that this file gets overwritten during
# installation. It's recommended to change the name if you use
# a manual configuration

# You can use the alias command 'fmagain' to run this script again
# in a verbose mode. This will give you a complete list of commands/ 
# variables set.

# List of environment variables:
#	- FM_PATH		(root path of the package)
#	- FM_BIN		(path to the executables)
#	- FM_LIB		(path to the libraries (for developers))
#	- FM_RUN		(path to the directory containing examples
#					 and possibly your calculations)
#	- FM_RUN_FM		(path to the directory containing FlameMan
#					 calculations)
#	- FM_RUN_SM		(path to the directory containing ScanMan
#					 examples)
#	- FM_DATA		(directory path that contains preprocessed 
#					 thermodynamic and transport data (*.bin files)
#					 or mechanisms (*.pre files))
#	- myData		(again, directory path that contains preprocessed 
#					 data; deprecated variable name is still included
#					 for compatibility)


###################################################################
########################   CONFIGURATION   ########################
###################################################################

# Variable pattern:
# DA_PATHNAME - absolut directory path
# FA_PATHNAME - absolut file path
# FR_TO_PATHNAME - file path relative to TO
# DR_TO_PATHNAME - directory path relative to TO

#########################
# Default configuration #
#########################

# DA_ROOT='/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Repository/..' # package installation root directory
# DA_ROOT=`dirname "$0"`

if ( -f /usr/sbin/lsof ) then
    set LSOF_CMD=/usr/sbin/lsof 
else if ( -f /usr/bin/lsof ) then
    set LSOF_CMD=/usr/sbin/lsof
else
	echo "lsof: Command not found."
	exit(1)
endif

#set LSOF_CMD=/usr/sbin/lsof
set SOURCE = `${LSOF_CMD} +p $$ | \grep -oE /.\*Source.csh`
#set DA_ROOT="$SOURCE"
set DA_ROOT=`dirname "${SOURCE}"`
set DR_SRC_SCRIPT_LOCATION="../.."
set DA_ROOT="$DA_ROOT/$DR_SRC_SCRIPT_LOCATION"
set DR_ROOT_BIN="Bin/bin" # relative to ROOT
set DR_ROOT_LIB="Bin/lib" 
set DA_ROOT_DATA="/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Build/../Data"

# Directories for running ScanMan and FlameMan
set DR_ROOT_RUN="Run"

########################
# Manual configuration #
########################
# set DA_ROOT="/Users/rlanger/FlameMasterITV" # package root directory
# set DR_ROOT_BIN="Bin/bin" # relative to ROOT
# set DR_ROOT_LIB="Bin/lib"
# set DA_ROOT_DATA="$DA_ROOT/Data"

# # Directories for running ScanMan and FlameMan
# set DR_ROOT_RUN="Run"

###########################
# Remaining configuration #
###########################
set DR_RUN_FM='FlameMan' # Directory for FlameMan calculations relative to run
set DR_RUN_SM='ScanMan' # Directory for ScanMan data relative to run

# Executables in the binary directory
set FR_BIN_FM='FlameMan' # FlameMan executable relative to binary directory
set FR_BIN_SM='ScanMan' # ScanMan executable relative to binary directory
set FR_BIN_CF='CreateBinFile'
set FR_BIN_LT='ListTool'

###################################################################
########################      PROGRAM      ########################
###################################################################

# In general, you won't have to change anything below.

# Simple implementation of options/flags
alias usage 'echo "Usage: source $SOURCE [-v (verbose mode)]"; exit 1;'
set argv = `getopt vh $argv`
set OPT_V=0;
while ( "$1" != "--")
	if ( "$1" == "-h" ) then 
		usage
	else if ( "$1" == "-v" ) then
			set OPT_V=1
	endif
	shift
end

shift
if ( "$argv" != "") then
	echo "Don't know how to handle arguments: '$argv'"
	exit 1
endif
#echo "ARGV: '$argv'"

alias FindFile 'set ffound=0; eval "if ( -f \!:1 ) set ffound=1;"'
alias DelAlias 'unalias \!:1'
alias CreateAlias 'alias \!:1 "\!:2" \!:3'

alias AliasIfFileExists 'eval " \\
	if ( "$ffound" == 1 ) then \\
	 	if ( "$OPT_V" == 1 ) then \\
			echo 'Found \!:2' \\
	 	endif \\
		if ( ! -x '\!:2' ) then \\
			echo 'Set executable: \!:2' \\
			chmod +x '\!:2' \\
	 	endif \\
	 	if ( "$OPT_V" == 1 ) then \\
	 		echo 'Setting alias '\!:1' '\!:2' '\!:3'' \\
	 	endif \\
	 	CreateAlias '\!:1' '\!:2' '\!:3' \\
	else \\
		DelAlias '\!:1' \\
		echo 'Cannot create alias command \!:1, \!:2 not existing' \\
	endif \\
	"'

alias FindDir 'set dfound=0; eval "if ( -d \!:1 ) set dfound=1;"'
alias MySetEnv 'setenv \!:1 \!:2' 

alias ExportIfDirExists 'eval " \\
	if ( "$dfound" == 1 ) then \\
	 	if ( "$OPT_V" == 1 ) then \\
			echo 'Found \!:2' \\
	 	endif \\
	 	if ( "$OPT_V" == 1 ) then \\
	 		echo 'Set environment '\!:1' '\!:2'' \\
	 	endif \\
	 	MySetEnv '\!:1' '\!:2' \\
	else \\
		unset \!:1 \\
		echo 'Cannot set environment variable \!:1, \!:2 is not a directory' \\
	endif \\
	"'

if ( "$OPT_V" == 1 ) then
	echo "#########################################################################"
	echo "Setting up environment for FlameMaster, version 4.0.0"
	echo "#########################################################################"
endif

set RUN_AGAIN=fmagain
if ( "$OPT_V" == 1 ) then
	echo ""
	echo "The command '$RUN_AGAIN' can be used to run this script again in verbose mode"
	echo ""
	echo "Running in verbose mode..."
endif

# Rerun in verbose mode
CreateAlias "$RUN_AGAIN" 	"source \'$SOURCE\'" '-v'

if ( "$OPT_V" == 1 ) then
	echo ""
	echo "Setting up locations..."
endif

# check root directory
FindDir 						"\'$DA_ROOT\'"
ExportIfDirExists FM_PATH 		"\'$DA_ROOT\'"

# check data directory
FindDir 						"\'$DA_ROOT_DATA\'"
ExportIfDirExists FM_DATA 		"\'$DA_ROOT_DATA\'"
ExportIfDirExists myData 		"\'$DA_ROOT_DATA\'"

# check run directories
FindDir 						"\'$DA_ROOT/$DR_ROOT_RUN\'"
ExportIfDirExists FM_RUN 		"\'$DA_ROOT/$DR_ROOT_RUN\'"
FindDir 						"\'$DA_ROOT/$DR_ROOT_RUN/$DR_RUN_FM\'"
ExportIfDirExists FM_RUN_FM 	"\'$DA_ROOT/$DR_ROOT_RUN/$DR_RUN_FM\'"
FindDir 						"\'$DA_ROOT/$DR_ROOT_RUN/$DR_RUN_SM\'"
ExportIfDirExists FM_RUN_SM 	"\'$DA_ROOT/$DR_ROOT_RUN/$DR_RUN_SM\'"

# check binary directory
FindDir 						"\'$DA_ROOT/$DR_ROOT_BIN\'"
ExportIfDirExists FM_BIN		"\'$DA_ROOT/$DR_ROOT_BIN\'"
FindDir 						"\'$DA_ROOT/$DR_ROOT_LIB\'"
ExportIfDirExists FM_LIB		"\'$DA_ROOT/$DR_ROOT_LIB\'"

if ( "$OPT_V" == 1 ) then
	echo ""
	echo "Creating alias commands..."
endif

FindFile 								"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_FM\'"
AliasIfFileExists 'FlameMan' 			"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_FM\'" 	''
AliasIfFileExists 'FlameMaster' 		"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_FM\'"	''
FindFile 								"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_SM\'"
AliasIfFileExists 'ScanMan' 			"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_SM\'"	''
FindFile 								"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_CF\'"
AliasIfFileExists 'CreateBinFile' 		"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_CF\'"	''
set LT_OPTS='-M'
FindFile 								"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_LT\'"
AliasIfFileExists ListTool 				"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_LT\'" 	"$LT_OPTS"
AliasIfFileExists LT 					"\'$DA_ROOT/$DR_ROOT_BIN/$FR_BIN_LT\'" 	"$LT_OPTS"

unset DA_ROOT
unset DA_ROOT_DATA
unset DR_ROOT_RUN
unset DR_RUN_FM
unset DR_RUN_SM
unset DR_ROOT_BIN
unset DR_ROOT_LIB
unset FR_BIN_FM
unset FR_BIN_SM
unset FR_BIN_CF
unset FR_BIN_LT
unset SOURCE

if ( "$OPT_V" == 1 ) then
	echo ""
	echo "done"
endif
