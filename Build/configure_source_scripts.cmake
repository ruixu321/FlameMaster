set(BASH_SOURCE_FM "Source.bash")
set(ZSH_SOURCE_FM "Source.zsh")
set(CSH_SOURCE_FM "Source.csh")

set(CMAKE_SOURCE_DIR "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Repository")
set(CMAKE_CURRENT_BINARY_DIR "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Build")
set(PROJECT_NAME "FlameMaster")
set(FlameMaster_VERSION "4.0.0")
set(CMAKE_INSTALL_PREFIX "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Repository/..")

set(SourceBashTemplate "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Repository/config/SourceTemplate.bash.in")
set(SourceZshTemplate "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Repository/config/SourceTemplate.zsh.in")
set(SourceCshTemplate "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Repository/config/SourceTemplate.csh.in")
set(SourceBATTemplate "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Repository/config/SourceTemplate.BAT.in")

set(SourceBashBuild "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Build/install_config/FlameMaster/Source.bash")
set(SourceZshBuild "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Build/install_config/FlameMaster/Source.zsh")
set(SourceCshBuild "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Build/install_config/FlameMaster/Source.csh")
set(SourceBATBuild "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Build/install_config/FlameMaster/Source.BAT")

cmake_policy(SET CMP0010 NEW)
set(INSTALL_BIN_DIR_REL "Bin/bin")
set(INSTALL_LIB_DIR_REL "Bin/lib")
set(INSTALL_BIN_DIR_REL "Bin/bin")

file(TO_NATIVE_PATH ${INSTALL_BIN_DIR_REL} NAT_INSTALL_BIN_DIR_REL)
file(TO_NATIVE_PATH ${INSTALL_LIB_DIR_REL} NAT_INSTALL_LIB_DIR_REL)

set(FlameMaster_DATA_PATH "/Users/ruixu/Documents/Flamelet/flamemaster/FlameMaster/Build/../Data")
file(TO_NATIVE_PATH "${FlameMaster_DATA_PATH}" FlameMaster_DATA_PATH)

set(INSTALL_EXAMPLES_DIR_REL "Run")

file(TO_NATIVE_PATH ${INSTALL_EXAMPLES_DIR_REL} NAT_INSTALL_EXAMPLES_DIR_REL)

set(REL_SOURCE "../..")
file(TO_NATIVE_PATH ${REL_SOURCE} NAT_REL_SOURCE)

set(DescriptionTemplate1 "# THIS FILE IS AUTOMATICALLY GENERATED DURING INSTALLATION
# RERUNNING THE INSTALLATION WILL OVERWRITE CHANGES
# CHANGES SHOULD BE ADDED IN THE RESPECTIVE TEMPLATE 
# IN Repository/config/

###################################################################
########################    DESCRIPTION    ########################
###################################################################

# This script can be used to set environment variables that
# make it more convenient to run and use the FlameMaster package.
# You might want to add something like the following line to your
")
set(DescriptionTemplate2 "# Alias commands and environment variables are only set if the
# the respective files exist. Otherwise, you will see a warning
# and only a subset of the variables is set.

# This script is configured automatically during the installation, 
# but you can insert your own configuration in the section below if
# you want to. Beware that this file gets overwritten during
# installation. It's recommended to change the name if you use
# a manual configuration

# You can use the alias command 'fmagain' to run this script again
# in a verbose mode. This will give you a complete list of commands/ 
# variables set.

# List of environment variables:
#	- FM_PATH		(root path of the package)
#	- FM_BIN		(path to the executables)
#	- FM_LIB		(path to the libraries (for developers))
#	- FM_RUN		(path to the directory containing examples
#					 and possibly your calculations)
#	- FM_RUN_FM		(path to the directory containing FlameMan
#					 calculations)
#	- FM_RUN_SM		(path to the directory containing ScanMan
#					 examples)
#	- FM_DATA		(directory path that contains preprocessed 
#					 thermodynamic and transport data (*.bin files)
#					 or mechanisms (*.pre files))
#	- myData		(again, directory path that contains preprocessed 
#					 data; deprecated variable name is still included
#					 for compatibility)
")

configure_file ("${SourceBashTemplate}" "${SourceBashBuild}" @ONLY)
configure_file ("${SourceZshTemplate}" "${SourceZshBuild}" @ONLY)
configure_file ("${SourceCshTemplate}" "${SourceCshBuild}" @ONLY)
configure_file ("${SourceBATTemplate}" "${SourceBATBuild}" @ONLY)

